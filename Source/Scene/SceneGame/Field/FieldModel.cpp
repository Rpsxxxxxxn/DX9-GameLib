//********************************************************************************
//
// Field.cpp
//
// フィールドクラス
//
// Date: 2019/07/30 更新
//
//********************************************************************************

//================================================================================
// インクルード
//================================================================================
#include "FieldModel.h"

using namespace FileConst;

//================================================================================
// クラス定義
//================================================================================

//--------------------------------------------------------------------------------
// コンストラクタ
//--------------------------------------------------------------------------------
CField::CField()
	: m_pModel(new CXFileModel)
	, m_pMesh(new CMesh)
	, m_vecLimit(Vector3(47.0f, 20.0f, 47.0f))
{
}

//--------------------------------------------------------------------------------
// デストラクタ
//--------------------------------------------------------------------------------
CField::~CField()
{
	SafeDelete(m_pModel);
	SafeDelete(m_pMesh);
}

//--------------------------------------------------------------------------------
// 初期化
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CField::Initialize(CSystem * pSystem) {}

//--------------------------------------------------------------------------------
// 更新
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CField::Update(CSystem * pSystem)
{
	CGameObject::Update(pSystem);

	m_pModel->SetTransform(&m_matWorld);
}

//--------------------------------------------------------------------------------
// 描画
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CField::DrawZDepth(CSystem * pSystem)
{
	m_pModel->Draw(pSystem, Shader::DEPTH, m_isVisible, false);
}

//--------------------------------------------------------------------------------
// 描画
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CField::DrawShader(CSystem * pSystem)
{
	m_pModel->Draw(pSystem, Shader::SHADOW, m_isVisible, !m_isSleep);
}

//--------------------------------------------------------------------------------
// 当たり判定の生成
//--------------------------------------------------------------------------------
void CField::Create(CSystem* pSystem, const int field)
{
	SafeDelete(m_pMesh);

	m_pMesh = new CMesh;
	m_pModel->SetModel(pSystem->GetXFile(field));
	m_pMesh->Create(pSystem->GetXFile(field));
}