//********************************************************************************
//
// FieldManager.hpp
//
// フィールド管理
//
// Date: 2019/10/07 更新
//
//********************************************************************************

#pragma once

//================================================================================
// インクルード
//================================================================================
#include "../../GameManager/GameManager.h"
#include "FieldModel.h"

//================================================================================
// クラス定義
//================================================================================
class CFieldManager
{
public:

	//--------------------------------------------------------------------------------
	// コンストラクタ
	//--------------------------------------------------------------------------------
	CFieldManager();

	//--------------------------------------------------------------------------------
	// デストラクタ
	//--------------------------------------------------------------------------------
	~CFieldManager();

	//--------------------------------------------------------------------------------
	// ファイル読み込み
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void LoadFile(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 初期化
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void Initialize(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 更新
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void Update(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 描画
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void ZDraw(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 描画
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void Draw(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// ステージの更新
	// 引　数：CSystem*	システムクラスのポインタ
	// 　　　　const int ステージ数
	//--------------------------------------------------------------------------------
	void UpdateStage(CSystem* pSystem, const int stageNum);

	//--------------------------------------------------------------------------------
	// フィールド範囲の取得
	// 戻り値：const Vector3	フィールドの範囲
	//--------------------------------------------------------------------------------
	Vector3 GetFieldLimit() const { return m_pField->GetFieldLimit(); };

	//--------------------------------------------------------------------------------
	// メッシュの取得
	// 戻り値：CFieldMesh*	メッシュの取得
	//--------------------------------------------------------------------------------
	CMesh* GetMesh() const { return m_pField->GetMesh(); };

private:

	//--------------------------------------------------------------------------------
	// ステージの読み込み
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void LoadStage(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 当たり判定の生成
	// 引　数：CSystem*	システムクラスのポインタ
	// 　　　　const int 読み込んだファイル番号
	//--------------------------------------------------------------------------------
	void Create(CSystem* pSystem, const int field);

	CField* m_pField;
};