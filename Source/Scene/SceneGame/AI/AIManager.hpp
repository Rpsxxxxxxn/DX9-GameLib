//********************************************************************************
//
// AIManager.hpp
//
// 敵の管理クラス
//
// Date: 2019/10/11 更新
//
//********************************************************************************

#pragma once

//================================================================================
// インクルード
//================================================================================
#include "../../GameManager/GameManager.h"
#include "../AI/Boss/BossBase.hpp"
#include "../AI/Boss/Kind/BigLeftHand.hpp"
#include "../AI/Enemy/EnemyBase.hpp"
#include "../AI/Enemy/Kind/Golem.hpp"
#include "../Player/Player.hpp"

//================================================================================
// クラス定義
//================================================================================
class CAIManager : public CGameObject
{
public:
	//--------------------------------------------------------------------------------
	// コンストラクタ
	//--------------------------------------------------------------------------------
	CAIManager();

	//--------------------------------------------------------------------------------
	// デストラクタ
	//--------------------------------------------------------------------------------
	~CAIManager();

	//--------------------------------------------------------------------------------
	// ファイル読み込み
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void LoadFile(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 初期化
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void Initialize(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 更新
	// 引　数：CSystem*	システムクラスのポインタ
	// 　　　　CPlayer*	プレイヤークラスのポインタ
	//--------------------------------------------------------------------------------
	void Update(CSystem* pSystem, CPlayer* pPlayer);

	//--------------------------------------------------------------------------------
	// シャドウ用
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void ZDraw(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 描画
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void Draw(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// エネミーの追加複数
	//--------------------------------------------------------------------------------
	void AddEnemyMultiple(CSystem* pSystem, const int num);

	//--------------------------------------------------------------------------------
	// ボスの出現
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void SpawnBoss(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 配列内の削除
	//--------------------------------------------------------------------------------
	void ObjectErase(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// ボスを追加したかどうか
	// 戻り値：bool	出現させたならばTRUE
	//--------------------------------------------------------------------------------
	bool IsAddedBoss() const;

	//--------------------------------------------------------------------------------
	// 敵配列の取得
	// 戻り値：list<CEnemyBase*> 敵配列
	//--------------------------------------------------------------------------------
	list<CEnemyBase*> GetEnemyList() const;

	//--------------------------------------------------------------------------------
	// ボスクラスの取得
	// 戻り値：CBossBase*		ボスクラス
	//--------------------------------------------------------------------------------
	CBossBase* GetBoss() const;

private:

	//--------------------------------------------------------------------------------
	// 解放
	//--------------------------------------------------------------------------------
	void Release();

	list<CEnemyBase*> m_lstEnemy;

	CBossBase* m_pBossObject;
	bool m_isAddedBoss;
};