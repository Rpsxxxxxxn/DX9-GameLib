//********************************************************************************
//
// Player.hpp
//
// プレイヤークラス
//
// Date: 2019/07/30 更新
//
//********************************************************************************

#pragma once

//================================================================================
// インクルード
//================================================================================
#include "../../GameManager/GameManager.h"
#include "Behavior/PlayerAnimation.hpp"
#include "Sword/Sword.hpp"

//================================================================================
// クラス定義
//================================================================================
class CPlayer : public CGameObject
{
public:

	//--------------------------------------------------------------------------------
	// コンストラクタ
	//--------------------------------------------------------------------------------
	CPlayer();

	//--------------------------------------------------------------------------------
	// デストラクタ
	//--------------------------------------------------------------------------------
	~CPlayer();

	//--------------------------------------------------------------------------------
	// ファイル読み込み
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void LoadFile(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 初期化
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void Initialize(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 更新
	// 引　数：CSystem*	システムクラスのポインタ
	// 　　　　const Vector3	カメラアングルの3次元ベクトル
	//--------------------------------------------------------------------------------
	void Update(CSystem* pSystem, const Vector3 vecAngle);

	//--------------------------------------------------------------------------------
	// 描画
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void ZDraw(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 描画
	// 引　数：CSystem*	システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void Draw(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// 敵から攻撃を受けたときの処理
	// 引　数：CSystem*		システムクラスのポインタ
	// 　　　　const float	攻撃力
	//--------------------------------------------------------------------------------
	void SetHitEnemyAttack(CSystem* pSystem, const float atk);

	//--------------------------------------------------------------------------------
	// レイの取得
	// 戻り値：CRay*	レイの取得
	//--------------------------------------------------------------------------------
	CRay* GetRay() const { return m_pRay; };

	//--------------------------------------------------------------------------------
	// レイの取得
	// 戻り値：CRay*	レイの取得
	//--------------------------------------------------------------------------------
	CRay* GetFootLeft() const { return m_pFootLeft; };

	//--------------------------------------------------------------------------------
	// レイの取得
	// 戻り値：CRay*	レイの取得
	//--------------------------------------------------------------------------------
	CRay* GetFootRight() const { return m_pFootRight; };

	//--------------------------------------------------------------------------------
	// 体の当たり判定
	// 戻り値：CBoundingBox*	バウンディングボックス
	//--------------------------------------------------------------------------------
	CBoundingBox* GetBodyBox() const { return m_pBodyBox; };

	//--------------------------------------------------------------------------------
	// 攻撃用当たり判定
	// 戻り値：CBoundingBox*	バウンディングボックス
	//--------------------------------------------------------------------------------
	CBoundingBox* GetAttackBox() const { return m_pSword->GetAttackBox(); };

	//--------------------------------------------------------------------------------
	// 入力している方向の取得
	//--------------------------------------------------------------------------------
	Vector3 GetDir() const { return m_vecDirection; };

	//--------------------------------------------------------------------------------
	// 攻撃力の取得
	// 戻り値：const float		攻撃力
	//--------------------------------------------------------------------------------
	float GetAtk() const { return m_atk; };

	//--------------------------------------------------------------------------------
	// 体力の取得
	// 戻り値：const float		体力
	//--------------------------------------------------------------------------------
	float GetHp() const { return m_hp; };

	//--------------------------------------------------------------------------------
	// スタミナの取得
	// 戻り値：const float		スタミナ
	//--------------------------------------------------------------------------------
	float GetStamina() const { return m_stamina; };

	//--------------------------------------------------------------------------------
	// プレイヤー攻撃アニメーション中
	// 戻り値：const bool	アニメーション中
	//--------------------------------------------------------------------------------
	bool IsNowAttack() const { return m_pAnimation->IsNowAttack(); };

	//--------------------------------------------------------------------------------
	// ダッシュ中
	//--------------------------------------------------------------------------------
	bool IsDash() const { return m_isDash; };

	//--------------------------------------------------------------------------------
	// ロックオン
	//--------------------------------------------------------------------------------
	bool IsLockOn() const { return m_isLockOn; };

	//--------------------------------------------------------------------------------
	// エネミーから攻撃受けたよ！
	//--------------------------------------------------------------------------------
	bool IsEnemyHit() const { return m_isEnemyHit; };

	//--------------------------------------------------------------------------------
	// エネミーから攻撃受けた判定をリセット
	//--------------------------------------------------------------------------------
	void EnemyHitReset();

private:

	//--------------------------------------------------------------------------------
	// カーソル位置中央固定
	//--------------------------------------------------------------------------------
	void CenterCursorPos();

	//--------------------------------------------------------------------------------
	// 死亡状況の更新
	//--------------------------------------------------------------------------------
	void UpdateDeath();

	//--------------------------------------------------------------------------------
	// 位置の更新
	//--------------------------------------------------------------------------------
	void UpdatePosition();

	//--------------------------------------------------------------------------------
	// 足のIK位置設定
	//--------------------------------------------------------------------------------
	void UpdateFootIK();

	//--------------------------------------------------------------------------------
	// プレイヤーの行列設定
	//--------------------------------------------------------------------------------
	void SetPlayerMatrix();

	//--------------------------------------------------------------------------------
	// 剣の行列設定
	//--------------------------------------------------------------------------------
	void SetSwordMatrix();

	//--------------------------------------------------------------------------------
	// 入力処理
	// 引　数：CSystem*		システムクラスのポインタ
	//--------------------------------------------------------------------------------
	void UpdateKeyInput(CSystem* pSystem);

	//--------------------------------------------------------------------------------
	// プレイヤーの操作
	// 引　数：CSystem*			システムクラスのポインタ
	// 　　　　const Vector3	回転アングル
	//--------------------------------------------------------------------------------
	void UpdateController(CSystem * pSystem, const Vector3  vecAngle);

	//--------------------------------------------------------------------------------
	// モデル回転
	// 引　数：const Vector3&	３次元方向ベクトル
	// 　　　　const float			カメラのアングル
	//--------------------------------------------------------------------------------
	void ModelRotate(const Vector3& vecDir, const float camAngle);

	//--------------------------------------------------------------------------------
	// スタミナの更新
	//--------------------------------------------------------------------------------
	void UpdateStamina();

	//--------------------------------------------------------------------------------
	// パラメータの取得
	// 引　数：const string ファイル名
	//--------------------------------------------------------------------------------
	void LoadParams(const string strFileName);

	//--------------------------------------------------------------------------------
	// パラメータの保存
	// 引　数：const string ファイル名
	//--------------------------------------------------------------------------------
	void InitParams(const string strFileName);

	enum footIK
	{
		RIGHT_FOOT,
		LEFT_FOOT,
	};

	CXFileModel* m_pModel;
	CBoundingBox* m_pBodyBox;
	CPlayerAnimation* m_pAnimation;
	CSword* m_pSword;
	CRay* m_pRay;
	CRay* m_pFootLeft;
	CRay* m_pFootRight;

	Vector3 m_vecInputDirection;
	Vector3 m_vecDirection;
	Vector3 m_vecMovement;
	
	float m_hp;
	float m_atk;
	float m_stamina;
	float m_moveSpeed;
	float m_moveSpeedDelay;
	float m_padSpeed;

	float m_dashSpeed;
	float m_walkSpeed;
	float m_delaySpeed;

	bool m_isLockOn;
	bool m_isDashKey;
	bool m_isDash;
	bool m_isDeath;
	bool m_isAttack;
	bool m_isEnemyHit;
};