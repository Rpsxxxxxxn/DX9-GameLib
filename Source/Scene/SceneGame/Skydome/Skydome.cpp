//********************************************************************************
//
// Skydome.hpp
//
// オブジェクトクラスのテンプレート
//
// Date: 2019/09/23 更新
//
//********************************************************************************

//================================================================================
// インクルード
//================================================================================
#include "Skydome.hpp"

using namespace FileConst;

//================================================================================
// 定数定義
//================================================================================
const Vector3 ADJUST_HEIGHT = Vector3(0.0f, 20.0f, 0.0f);

//--------------------------------------------------------------------------------
// コンストラクタ
//--------------------------------------------------------------------------------
CSkydome::CSkydome()
	: m_pModel(new CXFileModel)
{
	m_scaling = Vector3(3.0f, 3.0f, 3.0f);
}

//--------------------------------------------------------------------------------
// デストラクタ
//--------------------------------------------------------------------------------
CSkydome::~CSkydome()
{
	SafeDelete(m_pModel);
}

//--------------------------------------------------------------------------------
// ファイル読み込み
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CSkydome::LoadFile(CSystem * pSystem)
{
	pSystem->LoadXFile(MODEL_SKYDOME, "Resource/Models/Skydome/skydome.x");
}

//--------------------------------------------------------------------------------
// 初期化
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CSkydome::Initialize(CSystem * pSystem)
{
	m_pModel->SetModel(pSystem->GetXFile(MODEL_SKYDOME));
}

//--------------------------------------------------------------------------------
// 更新
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CSkydome::Update(CSystem * pSystem, CPlayerCamera* pCamera)
{
	auto playerPos = pCamera->GetPosition();

	m_position = playerPos - ADJUST_HEIGHT;

	CGameObject::Update(pSystem);

	m_pModel->SetTransform(&m_matWorld);
}

//--------------------------------------------------------------------------------
// 描画
// 引　数：CSystem*	システムクラスのポインタ
//--------------------------------------------------------------------------------
void CSkydome::Draw(CSystem * pSystem)
{
	m_pModel->Draw(pSystem, Shader::DEFAULT, m_isVisible, !m_isSleep);
}
