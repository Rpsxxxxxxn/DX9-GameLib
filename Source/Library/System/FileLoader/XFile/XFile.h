//*************************************************************
//
// XFile.hpp
//
// XFileファイル読み込み用クラス
//
// Date: 2019/07/30 更新
//
//*************************************************************

#pragma once

//=============================================================
// インクルード
//=============================================================
#include "../FileBase.h"

#include "XFrame/AllocateHierarchey.h"
#include "XFrame/XFrame.h"
#include "XFrame/XInverseKinematics.h"

//=============================================================
// クラス定義
//=============================================================
class CXFile : public CFileBase
{
public:
	//-------------------------------------------------------------
	// コンストラクタ
	// 引　数：IDirect3DDevice9*	デバイスのポインタ
	// 　　　　string				ディレクトリ
	//-------------------------------------------------------------
	CXFile(IDirect3DDevice9* pDevice, string strFileName);

	//-------------------------------------------------------------
	// デストラクタ
	//-------------------------------------------------------------
	~CXFile();

	//-------------------------------------------------------------
	// 初期化
	// 引　数：string	ファイルディレクトリ
	//-------------------------------------------------------------
	void Initialize(string path);

	//-------------------------------------------------------------
	// 解放
	//-------------------------------------------------------------
	void Release();

	//-------------------------------------------------------------
	// 描画
	//-------------------------------------------------------------
	void Draw(Matrix* pWorld, float meshAlpha);

	//-------------------------------------------------------------
	// フレーム名から変換マトリックスを取得
	// 引　数：string	フレームの名前
	// 　　　　Matrix	行列のポインタ取得
	// 備　考：フレーム名からマトリックス行列を取得します
	//-------------------------------------------------------------
	void GetMatrixFromFrameName(string strFrameName, Matrix* pMatWorld);

	//-------------------------------------------------------------
	// ターゲットベクトル
	// 引　数：Vector3	ターゲットベクトル
	//-------------------------------------------------------------
	void SetTargetVector(const UINT index, const Vector3 vecTarget);

	//-------------------------------------------------------------
	// IK用ボーン名設定
	// 引　数：string ボーン名1
	// 　　　　string ボーン名2
	// 　　　　string ボーン名3
	//-------------------------------------------------------------
	void SetBoneFrame(string bone1, string bone2, string bone3);

	//-------------------------------------------------------------
	// ボーンの位置ベクトルの取得
	// 引　数：
	//-------------------------------------------------------------
	Vector3 GetBonePos(const UINT index) const;

	//-------------------------------------------------------------
	// アニメーションコントローラーの取得
	// 備　考：アニメーションのコントローラーを取得します
	//-------------------------------------------------------------
	ID3DXAnimationController* GetAnimationController();

	//-------------------------------------------------------------
	// ルートメッシュの取得
	//-------------------------------------------------------------
	LPD3DXMESH GetRootMesh();

private:
	CAllocateHierarchy* m_pAllocateHierarchy;
	CXFrame* m_pFrame;
	CXInverseKinematics* m_pIK;
	ID3DXAnimationController* m_pAnimCtrl;
	LPDIRECT3DVERTEXDECLARATION9 m_pDeclaration;
	Matrix m_matWorld;
	bool m_isLoaded;
	bool m_isIK;
};