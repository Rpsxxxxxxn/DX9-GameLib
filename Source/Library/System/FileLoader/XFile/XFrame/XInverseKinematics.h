//*************************************************************
//
// XInverseKinematics.hpp
//
// 逆運動学(InverseKinematics) 足用
//
// Date: 2019/07/30 更新
//
//*************************************************************

#pragma once

//=============================================================
// インクルード
//=============================================================
#include "../../../../Common.h"
#include "XFrame.h"

//=============================================================
// ボーン用構造体
//=============================================================
struct IkBone
{
	Vector3 vecTarget;
	Vector3 vecFootPos;
	D3DXFRAME_DERIVED* m_pBone1;
	D3DXFRAME_DERIVED* m_pBone2;
	D3DXFRAME_DERIVED* m_pBone3;
};

//=============================================================
// クラス定義
//=============================================================
class CXInverseKinematics
{
public:
	//-------------------------------------------------------------
	// コンストラクタ
	// 引　数：モデルルートフレーム
	//-------------------------------------------------------------
	CXInverseKinematics(CXFrame* pXFrame);

	//-------------------------------------------------------------
	// IKの更新
	//-------------------------------------------------------------
	void UpdateIK();

	//-------------------------------------------------------------
	// ターゲットベクトル
	// 引　数：const Vector3	ターゲットベクトル
	//-------------------------------------------------------------
	void SetTargetVector(const UINT index, const Vector3 vecTarget);

	//-------------------------------------------------------------
	// ボーンフレームの設定
	// 引　数：const string ボーン名1
	// 　　　　const string ボーン名2
	// 　　　　const string ボーン名3
	//-------------------------------------------------------------
	void SetBoneFrame(string bone1, string bone2, string bone3);

	//-------------------------------------------------------------
	// ボーンの位置ベクトルの取得
	//-------------------------------------------------------------
	Vector3 GetBonePos(const UINT index) const;

private:

	CXFrame* m_pFrame;

	vector<IkBone> m_vecBone;
};