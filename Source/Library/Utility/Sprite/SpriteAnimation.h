//*************************************************************
//
// SpriteAnimation.h
//
// 描画アニメーション補助クラス
//
// Date: 2019/07/30 更新
//
//*************************************************************

#pragma once

//=============================================================
// インクルード
//=============================================================
#include "../../Common.h"
#include "../../System/FileLoader/Texture/Texture.h"
#include "../Math/Calculate.h"
#include "ISprite.h"

//=============================================================
// 構造体
//=============================================================
struct SPRITE_DATA
{
	D3DXVECTOR2 vecPos;
	UINT		uiWidth;
	UINT		uiHeight;
	int			alpha;
	float		angle;
};

//=============================================================
// クラス定義
//=============================================================
class CSpriteAnimation : public ISprite
{
public:
	//-------------------------------------------------------------
	// コンストラクタ
	// 引　数：TEXTURE_DATA*	テクスチャデータのポインタ
	//-------------------------------------------------------------
	CSpriteAnimation(TEXTURE_DATA* pTextureData);

	//-------------------------------------------------------------
	// 描画
	// 引　数：Engine*	エンジンクラスのポインタ
	//-------------------------------------------------------------
	void Draw(CSystem* pSystem);

	//-------------------------------------------------------------
	// 位置の設定
	// 引　数：const D3DXVECTOR2	3次元ベクトルの位置
	//-------------------------------------------------------------
	void SetPosition(const D3DXVECTOR2 vecPos);

	//-------------------------------------------------------------
	// 透明度の設定
	// 引　数：const int	透明度(０　〜　２５５)
	//-------------------------------------------------------------
	void SetAlpha(const int alpha);

	//-------------------------------------------------------------
	// 回転角度の設定
	// 引　数：const float	ラジアン角
	//-------------------------------------------------------------
	void SetAngle(const float angle);

	//-------------------------------------------------------------
	// 大きさの設定
	// 引　数：const UINT	横幅のUINT
	// 　　　　const UINT	縦幅のUINT
	//-------------------------------------------------------------
	void SetSize(const UINT width, const UINT height);

	//-------------------------------------------------------------
	// 大きさの設定
	// 引　数：const UINT	横幅のUINT
	//-------------------------------------------------------------
	void SetSizeX(const UINT width);

	//-------------------------------------------------------------
	// 大きさの設定
	// 引　数：const UINT	縦幅のUINT
	//-------------------------------------------------------------
	void SetSizeY(const UINT height);

	//-------------------------------------------------------------
	// 位置の設定
	// 引　数：const D3DXVECTOR2	3次元ベクトルの位置
	// 備　考：アニメーション使用時に利用
	//-------------------------------------------------------------
	void SetNewPosition(const D3DXVECTOR2 vecPos);

	//-------------------------------------------------------------
	// 透明度の設定
	// 引　数：const int	透明度(０　〜　２５５)
	// 備　考：アニメーション使用時に利用
	//-------------------------------------------------------------
	void SetNewAlpha(const int alpha);

	//-------------------------------------------------------------
	// 回転角度の設定
	// 引　数：const float	ラジアン角
	// 備　考：アニメーション使用時に利用
	//-------------------------------------------------------------
	void SetNewAngle(const float angle);

	//-------------------------------------------------------------
	// 大きさの設定
	// 引　数：const UINT	横幅のUINT
	// 　　　　const UINT	縦幅のUINT
	// 備　考：アニメーション使用時に利用
	//-------------------------------------------------------------
	void SetNewSize(const UINT width, const UINT height);

	//-------------------------------------------------------------
	// アニメーション終了時間
	// 引　数：const DWORD	終了時間(second)
	// 備　考：secondなので [1000ms] -> [1s]
	//-------------------------------------------------------------
	void SetEndTime(const double time);

	//-------------------------------------------------------------
	// 数値の設定
	// 引　数：const int	横幅
	// 　　　　const int	縦幅
	// 　　　　const int	数値
	//-------------------------------------------------------------
	void SetNumber(const int width, const int height, const int num);

	//-------------------------------------------------------------
	// テクスチャデータの設定
	// 引　数：TEXTURE_DATA*	テクスチャデータのポインタ
	//-------------------------------------------------------------
	void SetTextureData(TEXTURE_DATA* pTextureData);
private:
	//-------------------------------------------------------------
	// 更新
	// 引　数：Engine*	エンジンクラスのポインタ
	//-------------------------------------------------------------
	void Update(CSystem* pSystem);

	enum { OLD, NOW, NEW, MAX };

	SPRITE_DATA m_data[MAX];
	LPDIRECT3DTEXTURE9 m_pTexture;
	UINT m_uiWidth;
	UINT m_uiHeight;
	RECT m_rSour;
	RECT m_rDest;
	double m_endtime;
	double m_elapsedTime;
	bool m_nowAnimation;

	bool m_enablePosUpdate;
	bool m_enableAlphaUpdate;
	bool m_enableAngleUpdate;
	bool m_enableSizeUpdate;
};