//*************************************************************
//
// XFileModel.hpp
//
// XFileフォーマットのモデルを生成する
//
// Date: 2019/07/30 更新
//
//*************************************************************

#pragma once

//=============================================================
// インクルード
//=============================================================
#include "../../Common.h"
#include "../../System/System.h"

//=============================================================
// 構造体定義
//=============================================================
struct AnimDesc
{
	ID3DXAnimationSet*	pAnimSet;
	UINT				animID;
	FLOAT				loopTime;
	FLOAT				trackSpeed;
	FLOAT				shiftTime;
	FLOAT				curWeightTime;
};

//=============================================================
// クラス定義
//=============================================================
class CXFileModel
{
public:
	//-------------------------------------------------------------
	// コンストラクタ
	//-------------------------------------------------------------
	CXFileModel();

	//-------------------------------------------------------------
	// デストラクタ
	//-------------------------------------------------------------
	~CXFileModel();

	//-------------------------------------------------------------
	// モデルの設定
	//-------------------------------------------------------------
	void SetModel(CXFile* pModel);

	//-------------------------------------------------------------
	// 世界行列の設定
	// 引　数：matrix* 変換マトリックスのポインタ
	//-------------------------------------------------------------
	void SetTransform(Matrix* pMatWorld);

	//-------------------------------------------------------------
	// 描画
	// 引　数：CSystem* システムクラスのポインタ
	// 　　　　DWORD	シェーダタイプ
	// 　　　　bool		視錘台カリング用
	// 　　　　bool		アニメーション進行
	//-------------------------------------------------------------
	void Draw(CSystem* pSystem, DWORD value, bool bVisible = true, bool bAnimation = true);

	//-------------------------------------------------------------
	// フレーム名から変換マトリックスを取得
	// 引　数：string  フレーム名
	// 　　　　matrix* 変換マトリックスのポインタ
	//-------------------------------------------------------------
	void GetMatrixFromFrameName(string strFrameName, Matrix* pMatWorld);

	//-------------------------------------------------------------
	// アニメーションの時間設定
	// 引　数：double	１フレーム間の時間
	//-------------------------------------------------------------
	void SetAdvanceTime(const double deltaTime);

	//-------------------------------------------------------------
	// アニメーションの変更
	// 引　数：UINT	アニメーションの番号
	//-------------------------------------------------------------
	void SetChangeAnimation(const UINT animID);

	//-------------------------------------------------------------
	// アニメーションループ時間の設定
	// 引　数：UINT	アニメーションの番号
	// 　　　　float	ms
	//-------------------------------------------------------------
	void SetLoopTime(const UINT animID, const float time);

	//-------------------------------------------------------------
	// アニメーション補間時間の設定
	// 引　数：UINT	アニメーションの番号
	// 　　　　float	間隔
	//-------------------------------------------------------------
	void SetShiftTime(const UINT animID, const float interval);

	//-------------------------------------------------------------
	// ターゲットベクトル
	// 引　数：const Vector3	ターゲットベクトル
	//-------------------------------------------------------------
	void SetTargetVector(const UINT index, const Vector3 vecTarget);

	//-------------------------------------------------------------
	// ボーンフレームの設定
	// 引　数：string ボーン名1
	// 　　　　string ボーン名2
	// 　　　　string ボーン名3
	//-------------------------------------------------------------
	void SetBoneFrame(string bone1, string bone2, string bone3);

	//-------------------------------------------------------------
	// メッシュの透明度を設定します
	// 引　数：float 透明度(1.0f ~ 0.0f) 
	//-------------------------------------------------------------
	void SetMeshAlpha(const float value);

	//-------------------------------------------------------------
	// モデル内部アニメーション経過時間の取得
	// 戻り値：double	タイムの取得
	//-------------------------------------------------------------
	double GetTime() const;

	//-------------------------------------------------------------
	// ボーンの位置ベクトルの取得
	// 戻り値：Vector3	ボーン位置の取得
	//-------------------------------------------------------------
	Vector3 GetBonePos(const UINT index) const;

private:

	//-------------------------------------------------------------
	// アニメーションの再生
	//-------------------------------------------------------------
	void AdvanceTime();

	//XFileモデルのポインタ
	CXFile* m_pXFile;

	//アニメーション用ベクター配列
	vector<unique_ptr<AnimDesc>> m_vecAnim;

	//アニメーションコントローラー
	ID3DXAnimationController* m_pAnimationController;

	//現在のアニメーションセット
	UINT m_nowAnimationSet;

	//アニメーションの数
	UINT m_numAnimationSets;

	//アニメーションを進める時間
	double m_advanceTime;

	//ワールド座標
	Matrix m_matWorld;

	//アニメーションロード済み
	bool m_isLoadedSkinMesh;

	//透明度
	float m_meshAlpha;

	//コピー防止
	CXFileModel& operator=(const CXFileModel&);
	CXFileModel(const CXFileModel&);
};