//*************************************************************
//
// BoundingSphere.h
//
// 当たり判定クラス(円)
//
// Date: 2019/07/30 更新
//
//*************************************************************

#pragma once

//=============================================================
// インクルード
//=============================================================
#include "../Common.h"
#include "../System/System.h"

//=============================================================
// クラス定義
//=============================================================
class CSphere
{
public:

	//-------------------------------------------------------------
	// コンストラクタ
	//-------------------------------------------------------------
	CSphere();

	//-------------------------------------------------------------
	// デストラクタ
	//-------------------------------------------------------------
	~CSphere();

	//-------------------------------------------------------------
	// 初期化
	// 引　数：CSystem* pSystem		システムクラスのポインタ
	// 　　　　const float			半径
	// 　　　　const bool			デバッグ用描画
	//-------------------------------------------------------------
	void Create(CSystem* pSystem, const float radius, const bool showDebug);

	//-------------------------------------------------------------
	// 描画
	// 引　数：CSystem* pSystem		システムクラスのポインタ
	//-------------------------------------------------------------
	void Draw(CSystem* pSystem);

	//-------------------------------------------------------------
	// 世界行列の設定
	// 引　数：const Matrix*		世界行列
	//-------------------------------------------------------------
	void SetTransform(const Matrix* pMatWorld);

	//-------------------------------------------------------------
	// 世界行列の取得
	// 戻り値：const float			世界行列
	//-------------------------------------------------------------
	Matrix GetTransform() const;

	//-------------------------------------------------------------
	// 半径の取得
	// 戻り値：const float			半径
	//-------------------------------------------------------------
	float GetRadius() const;

private:

	//スフィア用メッシュ
	LPD3DXMESH m_pMesh;

	//半径
	float m_radius;

	//世界行列
	Matrix m_matWorld;

};